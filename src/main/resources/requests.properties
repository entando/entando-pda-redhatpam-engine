requests.query.total=SELECT min(startdate) as first_date, max(startdate) as end_date, count(*) as total \
  FROM processinstanceinfo

requests.query.percentage.days=SELECT day(startdate) as day, month(startdate) as month, year(startdate) as year, count(*) as total \
  FROM processinstanceinfo \
  GROUP BY day, month, year \
  ORDER BY year DESC, month DESC, day DESC \
  LIMIT 2

requests.query.percentage.months=SELECT month(startdate) as month, year(startdate) as year, count(*) as total \
  FROM processinstanceinfo \
  GROUP BY month, year \
  ORDER BY year DESC, month DESC \
  LIMIT 2

requests.query.percentage.years=SELECT year(startdate) as year, count(*) as total FROM processinstanceinfo \
  GROUP BY year \
  ORDER BY year DESC \
  LIMIT 2

######################################### DUAL TIME SERIES GRAPH PROPERTIES ###########################################

# These values represent the maximum number of expected entries for the graphs. In cases where the total is less
# than the expected then the code will fill zeros
dualtimeseries.graph.days.entries=30
dualtimeseries.graph.months.entries=30
dualtimeseries.graph.years.entries=30

dualtimeseries.query.line.days=SELECT day(startdate) as day, month(startdate) as month, year(startdate) as year, count(*) as total \
  FROM processinstanceinfo \
  GROUP BY day, month, year \
  ORDER BY year DESC, month DESC, day DESC \
  LIMIT 30

dualtimeseries.query.line.months=SELECT month(startdate) as month, year(startdate) as year, count(*) as total \
  FROM processinstanceinfo \
  GROUP BY month, year \
  ORDER BY year DESC, month DESC \
  LIMIT 30

dualtimeseries.query.line.years=SELECT year(startdate) as year, count(*) as total FROM processinstanceinfo \
  GROUP BY year \
  ORDER BY year DESC \
  LIMIT 30

dualtimeseries.query.bar.days=SELECT day(startdate) as day, month(startdate) as month, year(startdate) as year, count(*) as total \
  FROM processinstanceinfo \
  GROUP BY day, month, year \
  ORDER BY year DESC, month DESC, day DESC \
  LIMIT 30

dualtimeseries.query.bar.months=SELECT month(startdate) as month, year(startdate) as year, count(*) as total \
  FROM processinstanceinfo \
  GROUP BY month, year \
  ORDER BY year DESC, month DESC \
  LIMIT 30

dualtimeseries.query.bar.years=SELECT year(startdate) as year, count(*) as total FROM processinstanceinfo \
  GROUP BY year \
  ORDER BY year DESC \
  LIMIT 30

dualtimeseries.query.cardOne.total=SELECT min(startdate) as first_date, max(startdate) as end_date, count(*) as total \
  FROM processinstanceinfo

dualtimeseries.query.cardTwo.total=SELECT min(startdate) as first_date, max(startdate) as end_date, count(*) as total \
  FROM processinstanceinfo

dualtimeseries.query.cardThree.total=SELECT min(startdate) as first_date, max(startdate) as end_date, count(*) as total \
  FROM processinstanceinfo

dualtimeseries.query.cardOne.days=SELECT day(startdate) as day, month(startdate) as month, year(startdate) as year, count(*) as total \
  FROM processinstanceinfo \
  GROUP BY day, month, year \
  ORDER BY year DESC, month DESC, day DESC \
  LIMIT 2

dualtimeseries.query.cardOne.months=SELECT month(startdate) as month, year(startdate) as year, count(*) as total \
  FROM processinstanceinfo \
  GROUP BY month, year \
  ORDER BY year DESC, month DESC \
  LIMIT 2

dualtimeseries.query.cardOne.years=SELECT year(startdate) as year, count(*) as total FROM processinstanceinfo \
  GROUP BY year \
  ORDER BY year DESC \
  LIMIT 2

dualtimeseries.query.cardTwo.days=SELECT day(startdate) as day, month(startdate) as month, year(startdate) as year, count(*) as total \
  FROM processinstanceinfo \
  GROUP BY day, month, year \
  ORDER BY year DESC, month DESC, day DESC \
  LIMIT 2

dualtimeseries.query.cardTwo.months=SELECT month(startdate) as month, year(startdate) as year, count(*) as total \
  FROM processinstanceinfo \
  GROUP BY month, year \
  ORDER BY year DESC, month DESC \
  LIMIT 2
dualtimeseries.query.cardTwo.years=SELECT year(startdate) as year, count(*) as total FROM processinstanceinfo \
  GROUP BY year \
  ORDER BY year DESC \
  LIMIT 2

dualtimeseries.query.cardThree.days=SELECT day(startdate) as day, month(startdate) as month, year(startdate) as year, count(*) as total \
  FROM processinstanceinfo \
  GROUP BY day, month, year \
  ORDER BY year DESC, month DESC, day DESC \
  LIMIT 2

dualtimeseries.query.cardThree.months=SELECT month(startdate) as month, year(startdate) as year, count(*) as total \
  FROM processinstanceinfo \
  GROUP BY month, year \
  ORDER BY year DESC, month DESC \
  LIMIT 2

dualtimeseries.query.cardThree.years=SELECT year(startdate) as year, count(*) as total FROM processinstanceinfo \
  GROUP BY year \
  ORDER BY year DESC \
  LIMIT 2
